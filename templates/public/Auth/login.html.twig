<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
</head>
<body>
<div>
    <form id="loginForm">
        <div>
            <label for="username">Nom d'utilisateur:</label>
            <input type="text" id="username" name="username" required>
        </div>
        <div>
            <label for="password">Mot de passe:</label>
            <input type="password" id="password" name="password" required>
        </div>
        <button type="submit">Se connecter</button>
    </form>
    <div id="result"></div>
</div>

<script>
    document.getElementById('loginForm').addEventListener('submit', function(event) {
        event.preventDefault();

        const username = document.getElementById('username').value;
        const password = document.getElementById('password').value;
        const resultDiv = document.getElementById('result');

        fetch('/api/login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ username, password }),
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Erreur lors de la connexion');
                }
                return response.json();
            })
            .then(data => {
                const token = data.token; // Supposons que votre API renvoie un objet avec une clé 'token'

                // Afficher le token dans la console
                console.log('Token reçu :', token);

                // Afficher le token dans la page
                resultDiv.innerHTML = `<p>Token reçu : ${token}</p>`;

                // Stocker le token dans un cookie avec une expiration (exemple : 7 jours)
                const expires = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000); // 7 jours en milliseconds
                document.cookie = `authToken=${token}; expires=${expires.toUTCString()}; path=/`;

                // Optionnel : rediriger après la connexion
                setTimeout(() => {
                    window.location.href = '/'; // Redirige vers la page d'accueil après 2 secondes
                }, 2000);
            })
            .catch(error => {
                resultDiv.textContent = error.message;
                console.error('Erreur lors de la connexion :', error);
            });
    });
</script>
</body>
</html>
